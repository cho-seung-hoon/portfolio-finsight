<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finsight.backend.repository.mapper.HoldingsMapper">

    <select id="findByUserAndProduct" resultType="com.finsight.backend.domain.vo.user.HoldingsVO">
        SELECT * FROM Holdings
        WHERE user_id = #{userId} AND product_code = #{productCode}
    </select>

    <insert id="insert" parameterType="com.finsight.backend.domain.vo.user.HoldingsVO"
            useGeneratedKeys="true" keyProperty="holdingsId">
        INSERT INTO Holdings (user_id, product_code, product_category,
        holdings_total_price, holdings_total_quantity, holdings_status)
        VALUES (#{userId}, #{productCode}, #{productCategory},
        #{holdingsTotalPrice}, #{holdingsTotalQuantity}, #{holdingsStatus})
    </insert>

    <update id="update" parameterType="com.finsight.backend.domain.vo.user.HoldingsVO">
        UPDATE Holdings
        SET holdings_total_price = #{holdingsTotalPrice},
        holdings_total_quantity = #{holdingsTotalQuantity},
        holdings_status = #{holdingsStatus}
        WHERE holdings_id = #{holdingsId}
    </update>

    <!-- === 모델포트폴리오 - 나의 자산 구성 ==============================================================-->
    <!--  국내 주식형 (2) -->
    <select id="selectDomesticEquity2ByUserId" parameterType="string" resultType="double">
        SELECT
            CASE
                WHEN total.total_amount = 0 THEN 0
                ELSE ROUND(SUM(CASE
                    WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
                    WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
                    ELSE 0
                END) / total.total_amount * 100, 2)
            END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
            AND f.fund_country = 'domestic'
            AND f.fund_type = 'equity'
            AND f.product_risk_grade = 2
        LEFT JOIN Etf e ON h.product_code = e.product_code
            AND e.etf_country = 'domestic'
            AND e.etf_type = 'equity'
            AND e.product_risk_grade = 2
        JOIN (
            SELECT user_id, SUM(holdings_total_price) AS total_amount
            FROM Holdings
            WHERE user_id = #{userId}
            GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  국내 채권혼합형 (5) -->
    <select id="selectDomesticMixed5ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'domestic'
        AND f.fund_type = 'mixed'
        AND f.product_risk_grade = 5
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'domestic'
        AND e.etf_type = 'mixed'
        AND e.product_risk_grade = 5
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  국내 채권형 (5) -->
    <select id="selectDomesticBond5ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'domestic'
        AND f.fund_type = 'bond'
        AND f.product_risk_grade = 5
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'domestic'
        AND e.etf_type = 'bond'
        AND e.product_risk_grade = 5
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  국내 채권형 (6) -->
    <select id="selectDomesticBond6ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'domestic'
        AND f.fund_type = 'bond'
        AND f.product_risk_grade = 6
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'domestic'
        AND e.etf_type = 'bond'
        AND e.product_risk_grade = 6
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  현금성(예금 등) -->
    <select id="selectDepositPriceByUserId" parameterType="string" resultType="double">
        SELECT
            CASE
                WHEN his.history_amount = 0 OR his.history_amount IS NULL THEN 0
                ELSE ROUND((h.holdings_total_price / his.history_amount) * 100, 2)
            END AS depositPrice
        FROM Holdings AS h
            INNER JOIN History as his ON h.holdings_id = his.holdings_id
        WHERE (user_id = #{userId}) AND (h.product_category = 'deposit')
    </select>
    <!--  해외 주식형 (1) -->
    <select id="selectForeignEquity1ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'foreign'
        AND f.fund_type = 'equity'
        AND f.product_risk_grade = 1
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'foreign'
        AND e.etf_type = 'equity'
        AND e.product_risk_grade = 1
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  해외 주식형 (2) -->
    <select id="selectForeignEquity2ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'foreign'
        AND f.fund_type = 'equity'
        AND f.product_risk_grade = 2
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'foreign'
        AND e.etf_type = 'equity'
        AND e.product_risk_grade = 2
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  해외 주식형 (3) -->
    <select id="selectForeignEquity3ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'foreign'
        AND f.fund_type = 'equity'
        AND f.product_risk_grade = 3
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'foreign'
        AND e.etf_type = 'equity'
        AND e.product_risk_grade = 3
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>
    <!--  해외 채권형 (4) -->
    <select id="selectForeignBond4ByUserId" parameterType="string" resultType="double">
        SELECT
        CASE
        WHEN total.total_amount = 0 THEN 0
        ELSE ROUND(SUM(CASE
        WHEN f.product_code IS NOT NULL THEN h.holdings_total_price
        WHEN e.product_code IS NOT NULL THEN h.holdings_total_price
        ELSE 0
        END) / total.total_amount * 100, 2)
        END AS DomesticEquity2Price
        FROM Holdings h
        LEFT JOIN Fund f ON h.product_code = f.product_code
        AND f.fund_country = 'foreign'
        AND f.fund_type = 'bond'
        AND f.product_risk_grade = 4
        LEFT JOIN Etf e ON h.product_code = e.product_code
        AND e.etf_country = 'foreign'
        AND e.etf_type = 'bond'
        AND e.product_risk_grade = 4
        JOIN (
        SELECT user_id, SUM(holdings_total_price) AS total_amount
        FROM Holdings
        WHERE user_id = #{userId}
        GROUP BY user_id
        ) total ON h.user_id = total.user_id
        WHERE h.user_id = #{userId}
    </select>

    <!--  === 보유내역 - 투자 보아보기 ===================================================== -->
    <!--  정기 예금상품  -->
    <select id="selectDepositByUserId" parameterType="string" resultType="double">
        SELECT holdings_total_price
        FROM Holdings
        WHERE (user_id = #{userId}) AND (product_category = 'deposit')
    </select>
    <!--  국내 투자상품  -->
    <select id="selectDomesticByUserId" parameterType="string" resultType="double">
        SELECT h.holdings_total_price
        FROM Holdings AS h
            INNER JOIN Fund as f ON h.product_code = f.product_code
            INNER JOIN Etf as e ON h.product_code = e.product_code
        WHERE (user_id = #{userId}) AND ((f.fund_country = 'domestic') OR (e.etf_country = 'domestic'))
    </select>
    <!--  해외 투자상품  -->
    <select id="selectForeignByUserId" parameterType="string" resultType="double">
        SELECT h.holdings_total_price
        FROM Holdings AS h
            INNER JOIN Fund as f ON h.product_code = f.product_code
            INNER JOIN Etf as e ON h.product_code = e.product_code
        WHERE (user_id = #{userId}) AND ((f.fund_country = 'foreign') OR (e.etf_country = 'foreign'))
    </select>

    <select id="existProductByUserIdAndProductCode" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT EXISTS (
        SELECT 1
        FROM Holdings
        WHERE user_id = #{userId}
        AND product_code = #{productCode}
        )
    </select>

    <!-- === 보유내역 상세 조회 ==============================================================-->
    <!-- 펀드 보유내역 조회 -->
    <select id="selectFundHoldingsByUserId" parameterType="string" resultType="com.finsight.backend.dto.response.HoldingDetailDto">
        SELECT 
            Holdings.product_code as productCode,
            Fund.product_name as productName,
            Fund.product_company_name as productCompanyName,
            CASE 
                WHEN Fund.fund_country = 'domestic' THEN '국내'
                WHEN Fund.fund_country = 'foreign' THEN '해외'
                ELSE '기타'
            END as productCountry,
            CASE 
                WHEN Fund.fund_type = 'equity' THEN '주식형'
                WHEN Fund.fund_type = 'bond' THEN '채권형'
                WHEN Fund.fund_type = 'mixed' THEN '혼합형'
                ELSE '기타'
            END as productType,
            Holdings.holdings_total_quantity as currentHoldings,
            Holdings.holdings_total_price as currentValuation,
            NULL as previousDayPrice,
            NULL as maturityDate,
            CASE WHEN Watch.watchlist_id IS NOT NULL THEN true ELSE false END as isWatched
        FROM Holdings
        JOIN Fund ON Holdings.product_code = Fund.product_code
        LEFT JOIN Watch ON Holdings.user_id = Watch.user_id AND Holdings.product_code = Watch.product_code
        WHERE Holdings.user_id = #{userId}
        AND Holdings.product_category = 'fund'
        AND Holdings.holdings_status = 'holding'
        ORDER BY Holdings.holdings_total_price DESC
    </select>
    
    <!-- ETF 보유내역 조회 -->
    <select id="selectEtfHoldingsByUserId" parameterType="string" resultType="com.finsight.backend.dto.response.HoldingDetailDto">
        SELECT 
            Holdings.product_code as productCode,
            Etf.product_name as productName,
            Etf.product_company_name as productCompanyName,
            CASE 
                WHEN Etf.etf_country = 'domestic' THEN '국내'
                WHEN Etf.etf_country = 'foreign' THEN '해외'
                ELSE '기타'
            END as productCountry,
            CASE 
                WHEN Etf.etf_type = 'equity' THEN '주식형'
                WHEN Etf.etf_type = 'bond' THEN '채권형'
                WHEN Etf.etf_type = 'mixed' THEN '혼합형'
                ELSE '기타'
            END as productType,
            Holdings.holdings_total_quantity as currentHoldings,
            Holdings.holdings_total_price as currentValuation,
            CASE 
                WHEN Holdings.holdings_total_quantity = 0 OR Holdings.holdings_total_quantity IS NULL THEN NULL
                ELSE ROUND(Holdings.holdings_total_price / Holdings.holdings_total_quantity, 2)
            END as previousDayPrice,
            NULL as maturityDate,
            CASE WHEN Watch.watchlist_id IS NOT NULL THEN true ELSE false END as isWatched
        FROM Holdings
        JOIN Etf ON Holdings.product_code = Etf.product_code
        LEFT JOIN Watch ON Holdings.user_id = Watch.user_id AND Holdings.product_code = Watch.product_code
        WHERE Holdings.user_id = #{userId}
        AND Holdings.product_category = 'etf'
        AND Holdings.holdings_status = 'holding'
        ORDER BY Holdings.holdings_total_price DESC
    </select>
    
    <!-- 예금 보유내역 조회 -->
    <select id="selectDepositHoldingsByUserId" parameterType="string" resultType="com.finsight.backend.dto.response.HoldingDetailDto">
        SELECT 
            Holdings.product_code as productCode,
            Deposit.product_name as productName,
            Deposit.product_company_name as productCompanyName,
            '국내' as productCountry,
            '예금' as productType,
            Holdings.holdings_total_price as currentHoldings,
            Holdings.holdings_total_price as currentValuation,
            NULL as previousDayPrice,
            DATE_ADD(History.history_trade_date, INTERVAL History.contract_months MONTH) as maturityDate,
            CASE WHEN Watch.watchlist_id IS NOT NULL THEN true ELSE false END as isWatched
        FROM Holdings
        JOIN Deposit ON Holdings.product_code = Deposit.product_code
        JOIN History ON Holdings.holdings_id = History.holdings_id
        LEFT JOIN Watch ON Holdings.user_id = Watch.user_id AND Holdings.product_code = Watch.product_code
        WHERE Holdings.user_id = #{userId}
        AND Holdings.product_category = 'deposit'
        AND Holdings.holdings_status = 'holding'
        ORDER BY Holdings.holdings_total_price DESC
    </select>
    
</mapper>